"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.suite = void 0;
const node_test_1 = require("node:test");
const util_js_1 = require("../util.js");
const MINUTE = 60 * 1000;
/**
 * @internal
 *
 * Wraps either describe or it with relevant .only, .skip, .todo & .each helpers,
 * shimming it into a Jest-compatible environment.
 *
 * @param {} fn
 */
function createWrapper(fn, defaultTimeout) {
    const wrap = (opts) => (name, exec, timeout) => fn(name, { ...opts, timeout: (timeout || defaultTimeout) }, exec);
    // Ensure that we have consistent helpers on the function. These are not consistently
    // applied accross all node:test versions, latest has all, so always apply ours.
    // Instead of node:test options for e.g. timeout, we provide a Jest-compatible signature
    return (0, util_js_1.enhanceObj)(wrap({}), {
        only: wrap({ only: true }),
        skip: wrap({ skip: true }),
        todo: wrap({ todo: true })
    });
}
/**
 * This ensures that the describe and it functions match our actual usages.
 * This includes .only, .skip and .todo helpers (.each is not applied)
 **/
function suite() {
    return {
        describe: createWrapper(node_test_1.describe, 60 * MINUTE),
        it: createWrapper(node_test_1.it, 2 * MINUTE)
    };
}
exports.suite = suite;
