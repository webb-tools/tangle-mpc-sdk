export type AnyFn = (...args: any[]) => any;
export type BaseObj = Record<string, unknown>;
export type BaseFn = Function;
export type StubFn = (...args: unknown[]) => unknown;
export type WithMock<F extends AnyFn> = F & {
    mock: {
        calls: {
            arguments: unknown[];
        }[];
        mockImplementation: (fn: AnyFn) => void;
        mockImplementationOnce: (fn: AnyFn) => void;
        resetCalls: () => void;
        restore: () => void;
    };
};
