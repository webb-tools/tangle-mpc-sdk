/** This should appear as-is in the output with: 1. extension added, 2. augmented.d.ts correct */
import './augmented.js';
/** This import should appear as-in in the ouput (cjs without asserts) */
import testJson from '@polkadot/dev/rootJs/testJson.json' assert { type: 'json' };
/** Double double work, i.e. re-exports */
export { Clazz } from './Clazz.js';
/** Function to ensure that BigInt does not have the Babel Math.pow() transform */
export function bigIntExp() {
    // 123_456n * 137_858_491_849n
    return 123456789n * (13n ** 10n);
}
/** Function to ensure that dynamic imports work */
export async function dynamic(a, b) {
    // NOTE we go via this path so it points to the same location in both ESM
    // and CJS output (a './dynamic' import would be different otherwise)
    // @ts-expect-error We don't have a definition
    const { sum } = await import('@polkadot/dev/rootJs/dynamic.mjs');
    // eslint-disable-next-line @typescript-eslint/no-unsafe-return
    return sum(a, b);
}
/** Function to ensure we have json correctly imported */
export function json() {
    return testJson.test.json;
}
/** Check support for the ?? operator */
export function jsOpExp(a) {
    return a ?? 42;
}
/** This is an actual check to ensure PURE is all-happy */
export const pureOpExp = /*#__PURE__*/ jsOpExp();
